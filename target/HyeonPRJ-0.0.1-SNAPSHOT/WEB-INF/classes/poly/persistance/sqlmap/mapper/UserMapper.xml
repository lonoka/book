<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 자바와 연결할 Mapper파일 설정 -->
<mapper namespace="poly.persistance.mapper.UserMapper">

	<!-- 회원 가입하기 -->
	<insert id="insertUserInfo" parameterType="UserDTO">
		INSERT INTO USER_INFO
		(
		USER_ID,
		USER_NAME,
		PASSWORD,
		USER_MAIL,
		USER_AUTHOR,
		USER_DATE,
		USER_GEN,
		USER_STAT,
		REG_ID,
		REG_DT,
		CHG_ID,
		CHG_DT
		)
		VALUES (
		#{user_id},
		#{user_name},
		#{password},
		#{user_mail},
		0,
		#{user_date},
		#{user_gen},
		0,
		#{user_id},
		SYSDATE,
		#{user_id},
		SYSDATE
		)
	</insert>
	<!-- 이메일로 회원 가입 중복 방지하기 -->
	<select id="getUserExists" parameterType="UserDTO"
		resultType="UserDTO">
		SELECT DECODE(COUNT(1),0,'N','Y') AS EXISTS_YN
		FROM
		USER_INFO
		WHERE USER_ID=#{user_id}
	</select>

	<!-- 아이디 정보 찾기 -->
	<select id="getIdInfo" parameterType="UserDTO"
		resultType="UserDTO">
		SELECT
		USER_ID as user_id
		FROM
		USER_INFO
		WHERE
		USER_NAME=#{user_name} AND USER_DATE =#{user_date} AND USER_MAIL=#{user_mail}
	</select>

	<!-- 비밀번호 정보 찾기 -->
	<select id="getPwInfo" parameterType="UserDTO"
		resultType="UserDTO">
		SELECT
		PASSWORD as password
		FROM
		USER_INFO
		WHERE
		USER_NAME=#{user_name} AND USER_DATE =#{user_date} AND USER_MAIL=#{user_mail} AND USER_ID =
		#{user_id}
	</select>
	
	<update id="updatePwInfo" parameterType="UserDTO">
		UPDATE
			USER_INFO
		SET
			PASSWORD = #{password}
		WHERE
			USER_ID=#{user_id}
	</update>
	
	<!-- 아이디 체크  -->
	<select id="ckeckId" parameterType="UserDTO" resultType="int">
		SELECT COUNT(*)
		FROM
		USER_INFO
		WHERE USER_ID=#{user_id}
	</select>
	
	<!-- 이메일 체크  -->
	<select id="ckeckMail" parameterType="UserDTO" resultType="int">
		SELECT COUNT(*)
		FROM
		USER_INFO
		WHERE USER_MAIL=#{user_mail}
	</select>
	
	<!-- 로그인  -->
	<select id="getLogin" parameterType="UserDTO" resultType="UserDTO">
		SELECT
			USER_NAME,
			USER_ID,
			USER_AUTHOR,
			USER_STAT,
			USER_DATE,
			USER_GEN
		FROM
			USER_INFO
		WHERE
			USER_ID=#{user_id} AND PASSWORD =#{password}
	</select>
	
	<!-- 회원정보 받기  -->
	<select id="getUserInfo" parameterType="String" resultType="UserDTO">
		SELECT
			USER_ID,
			USER_NAME,
			USER_MAIL,
			USER_DATE,
			USER_GEN
		FROM
			USER_INFO
		WHERE
			USER_ID=#{user_id}
	</select>
	
	<!-- 회원정보 수정 -->
	<update id="updateUserInfo" parameterType="UserDTO">
		UPDATE
			USER_INFO
		SET
			USER_NAME = #{user_name},
			PASSWORD = #{password},
			USER_DATE = #{user_date},
			USER_GEN = #{user_gen},
			CHG_ID = #{user_id},
			CHG_DT = SYSDATE
		WHERE
			USER_ID = #{user_id}
	</update>

</mapper>